{"version":3,"sources":["services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","newObject","axios","post","then","response","data","get","id","console","log","delete","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Person","person","deleteFunc","name","number","onClick","PersonForm","props","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","onChange","type","Persons","persons","map","App","useState","setPersons","setNewName","setNewNumber","errorMessage","setErrorMessage","useEffect","personService","length","event","preventDefault","personObject","p","includes","window","alert","returnedPerson","concat","setTimeout","target","confirm","newPersons","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20435fe7.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/persons'\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst getAll = () => {\n  return axios.get(baseUrl).then(response => response.data)\n}\n\nconst deletePerson = id => {\n  console.log(id);\n  return axios.delete(`${baseUrl}/${id}`).then(response => response.data)\n}\n\nexport default { create, getAll, deletePerson }","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  const errorStyle =  {\n    color: \"green\",\n    background: \"lightgrey\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  }\n\n  return (\n    <div style={errorStyle}>\n      {message}\n    </div>\n  )\n}\n\nconst Person = ({ person, deleteFunc}) => {\n  console.log(deleteFunc)\n  return (\n    <li>{person.name} {person.number} <button onClick={() => deleteFunc(person)}>delete</button></li>\n  )\n}\n\nconst PersonForm = (props) => {\n  const {addPerson, newName, handleNameChange, newNumber, handleNumberChange} = props\n  return (\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input \n            value={newName}\n            onChange={handleNameChange}\n          />\n        </div>\n        <div>\n          number: <input \n            value={newNumber}\n            onChange={handleNumberChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n  )\n}\n\nconst Persons = (props) => {\n  const {persons, deleteFunc} = props\n  return (\n      <ul>\n        {persons.map(person =>\n          <Person key={person.name} person={person} deleteFunc={deleteFunc}/>\n        )}\n      </ul>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState('')\n\n  const hook = () => {\n    console.log('effect')\n    personService.getAll().then(persons => setPersons(persons))\n  }\n  useEffect(hook, [])\n  console.log('render', persons.length, 'persons')\n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (persons.map(p => p.name).includes(newName)) {\n      window.alert(`${newName} is already added to phonebook`)\n    } else {\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson))\n            setNewName('')\n            setNewNumber('')\n\n            setErrorMessage(\n              `Added '${returnedPerson.name}'`\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n        }\n      )\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const deleteFunc = person => {\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      personService.deletePerson(person.id)\n      const newPersons = persons.filter(p => p.id != person.id)\n\n      setPersons(newPersons)\n    }  \n  }\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={errorMessage} />\n\n      <h3>Add a new</h3>\n\n      <PersonForm\n         addPerson={addPerson}\n         newName={newName}\n         handleNameChange={handleNameChange}\n         newNumber={newNumber}\n         handleNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n\n      <Persons persons={persons} deleteFunc={deleteFunc}/>\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}